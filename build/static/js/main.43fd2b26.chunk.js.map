{"version":3,"sources":["components/MyContext.js","components/MyProvider.js","components/Sidebar.js","components/Topbar.js","components/Content.js","components/Card.js","components/ContentWrapper.js","App.js","serviceWorker.js","index.js"],"names":["MyContext","React","createContext","MyProvider","state","wordBank","fetch","result","json","data","prevState","this","setState","Provider","value","props","children","Component","Sidebar","className","id","href","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","Topbar","type","placeholder","aria-label","aria-describedby","role","aria-haspopup","Content","Consumer","context","console","log","ContentWrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8UAOeA,EAFGC,IAAMC,gB,6kBCmCTC,E,YAlCX,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTC,SAAU,IAHL,E,qNASYC,MAAM,c,cAArBC,E,gBACaA,EAAOC,O,OAApBC,E,OAMIC,EAAYC,KAAKP,MAC3BO,KAAKC,SAAL,KACOF,EADP,CAEIL,SAAUI,K,qIAMd,OACI,kBAAC,EAAUI,SAAX,CACIC,MAAOH,KAAKP,MAAMC,UACjBM,KAAKI,MAAMC,c,GA9BHC,aCyEVC,E,YAzEX,WAAYH,GAAO,qEACTA,I,sEAIN,OACI,6BAIR,wBAAII,UAAU,gEAAgEC,GAAG,oBAG/E,uBAAGD,UAAU,iEAAiEE,KAAK,cAEjF,yBAAKF,UAAU,2BAAf,YAMF,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,YAKA,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,qBAAqBE,KAAK,IAAIC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,OAAOC,gBAAc,eAC9H,uBAAGN,UAAU,qBACb,4CAEF,yBAAKC,GAAG,cAAcD,UAAU,WAAWO,kBAAgB,aAAaC,cAAY,qBAClF,yBAAKR,UAAU,wCACb,wBAAIA,UAAU,mBAAd,aACA,uBAAGA,UAAU,gBAAgBE,KAAK,IAAlC,OAFF,IAGE,uBAAGF,UAAU,gBAAgBE,KAAK,IAAlC,YAON,wBAAIF,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,eAC3B,uBAAGF,UAAU,uBACb,2CAGJ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWE,KAAK,eAC3B,uBAAGF,UAAU,uBACb,mDAMJ,wBAAIA,UAAU,0B,GA5DEF,aCoEPW,E,YApEX,WAAYb,GAAO,qEACTA,I,sEAIN,OACI,6BAII,yBAAKI,UAAU,4EAGvB,4BAAQC,GAAG,mBAAmBD,UAAU,8CACtC,uBAAGA,UAAU,gBAIf,0BAAMA,UAAU,0FACd,yBAAKA,UAAU,eACb,2BAAOU,KAAK,OAAOV,UAAU,uCAAuCW,YAAY,gBAAgBC,aAAW,SAASC,mBAAiB,iBAErI,yBAAKb,UAAU,sBACb,4BAAQA,UAAU,kBAAkBU,KAAK,UACvC,uBAAGV,UAAU,4BAOrB,wBAAIA,UAAU,sBAGZ,wBAAIA,UAAU,wCACZ,uBAAGA,UAAU,2BAA2BE,KAAK,IAAID,GAAG,iBAAiBa,KAAK,SAASX,cAAY,WAAWY,gBAAc,OAAOV,gBAAc,SAC3I,uBAAGL,UAAU,yBAGf,yBAAKA,UAAU,iEAAiEO,kBAAgB,kBAC9F,0BAAMP,UAAU,2CACd,yBAAKA,UAAU,eACb,2BAAOU,KAAK,OAAOV,UAAU,uCAAuCW,YAAY,gBAAgBC,aAAW,SAASC,mBAAiB,iBAErI,yBAAKb,UAAU,sBACb,4BAAQA,UAAU,kBAAkBU,KAAK,UACvC,uBAAGV,UAAU,8BASzB,yBAAKA,UAAU,4C,GAxDJF,aCuCNkB,GCvCIlB,Y,YDIf,WAAYF,GAAO,qEACTA,I,sEAIN,OACI,6BAEQ,yBAAKI,UAAU,mBAEX,yBAAKA,UAAU,6DACX,wBAAIA,UAAU,yBAAd,gCAGJ,yBAAKA,UAAU,OAGf,kBAAC,EAAUiB,SAAX,MACC,SAAAC,GAAO,OACLC,QAAQC,gB,GApBbtB,cEgCPuB,E,YAhCX,WAAYzB,GAAO,qEACTA,I,sEAMN,OAEI,yBAAKK,GAAG,kBAAkBD,UAAU,sBAGlC,yBAAKC,GAAG,WAEN,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAhBaH,aC6CdwB,GA3CMxC,IAAMC,cAAc,S,YAIvC,aAAc,uE,sEAwBV,OACF,kBAAC,EAAD,KACA,yBAAKiB,UAAU,OACb,yBAAKC,GAAG,WACR,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GA/BYH,cCMEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCdNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.43fd2b26.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// this is the equivalent to the createStore method of Redux\r\n// https://redux.js.org/api/createstore\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import React, { Component }from 'react';\r\n\r\nimport MyContext from './MyContext';\r\n\r\nclass MyProvider extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            wordBank: []\r\n        };\r\n    \r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const result = await fetch('/api/words');\r\n        const data = await result.json();\r\n    \r\n        // const prevState = this.state;\r\n        // const newState = {recipes: data.results};\r\n        // const nextState = Object.assign({}, prevState, newState);\r\n        // this.setState(nextState)\r\n            const prevState = this.state;\r\n        this.setState({\r\n            ...prevState,\r\n            wordBank: data\r\n        })\r\n    \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <MyContext.Provider\r\n                value={this.state.wordBank}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProvider","import React, {Component} from 'react'\r\n\r\n\r\nclass Sidebar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n\r\n{/* <!-- Sidebar --> */}\r\n    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n\r\n      {/* <!-- Sidebar - Brand --> */}\r\n      <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\r\n    \r\n        <div className=\"sidebar-brand-text mx-3\"> KIRIN </div>\r\n      </a>\r\n\r\n\r\n\r\n      {/* <!-- Divider --> */}\r\n      <hr className=\"sidebar-divider\"/>\r\n      {/* <!-- Heading --> */}\r\n      <div className=\"sidebar-heading\">\r\n        Japanese\r\n      </div>\r\n\r\n      {/* <!-- Nav Item - Pages Collapse Menu --> */}\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n          <i className=\"fas fa-fw fa-cog\"></i>\r\n          <span>Word Bank</span>\r\n        </a>\r\n        <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\r\n          <div className=\"bg-white py-2 collapse-inner rounded\">\r\n            <h6 className=\"collapse-header\">Category:</h6>\r\n            <a className=\"collapse-item\" href=\"\">All</a> {/*This is where you can make a collapsable item active*/}\r\n            <a className=\"collapse-item\" href=\"\">Verbs</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n\r\n      \r\n      {/* <!-- Nav Item - Tables --> */}\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"tables.html\">\r\n          <i className=\"fas fa-fw fa-table\"></i>\r\n          <span>Phrases</span></a>\r\n      </li>\r\n      {/* <!-- Nav Item - Tables --> */}\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"tables.html\">\r\n          <i className=\"fas fa-fw fa-table\"></i>\r\n          <span>Word of the Day</span></a>\r\n      </li>\r\n\r\n\r\n\r\n      {/* <!-- Divider --> */}\r\n      <hr className=\"sidebar-divider\"/>\r\n    </ul>\r\n    {/* <!-- End of Sidebar --> */}\r\n\r\n    \r\n\r\n    \r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react'\r\n\r\nclass Topbar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                    \r\n                {/* <!-- Topbar --> */}\r\n\r\n                <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n        \r\n        {/* <!-- Sidebar Toggle (Topbar) --> */}\r\n        <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n          <i className=\"fa fa-bars\"></i>\r\n        </button>\r\n\r\n        {/* <!-- Topbar Search --> */}\r\n        <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n          <div className=\"input-group\">\r\n            <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\r\n          </input>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-primary\" type=\"button\">\r\n                <i className=\"fas fa-search fa-sm\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        {/* <!-- Topbar Navbar --> */}\r\n        <ul className=\"navbar-nav ml-auto\">\r\n\r\n          {/* <!-- Nav Item - Search Dropdown (Visible Only XS) --> */}\r\n          <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <i className=\"fas fa-search fa-fw\"></i>\r\n            </a>\r\n            {/* <!-- Dropdown - Messages --> */}\r\n            <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n              <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\r\n                  </input>\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\" type=\"button\">\r\n                      <i className=\"fas fa-search fa-sm\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </li>\r\n\r\n\r\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\r\n        </ul>\r\n\r\n      </nav>\r\n      {/* <!-- End of Topbar --> */}\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Topbar","import React, {Component, Fragment} from 'react'\r\nimport Card from './Card'\r\nimport MyContext from './MyContext'\r\n\r\n\r\nclass Content extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                 {/* <!-- Begin Page Content --> */}\r\n                    <div className=\"container-fluid\">                    \r\n                        {/* <!-- Page Heading --> */}\r\n                        <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                            <h1 className=\"h3 mb-0 text-gray-800\">Search results and etcetera</h1>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                        {/* <Card word={\"banana\"}/> */}\r\n                                            \r\n                        <MyContext.Consumer>\r\n                        {context => (\r\n                           console.log()\r\n                           \r\n                        )}\r\n                        </MyContext.Consumer>\r\n                        </div>\r\n                        \r\n                      \r\n                       </div>\r\n                 {/* <!-- /.container-fluid --> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Content","import React, {Component} from 'react'\r\n\r\nclass Card extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n                <div className=\"col-lg-6\">\r\n                    \r\n                    {/* <!-- Collapsable Card Example --> */}\r\n                    <div className=\"card shadow mb-4\">\r\n                            {/* <!-- Card Header - Accordion --> */}\r\n                            <a href={\"#collapseCardExample\"+this.props.word} className=\"d-block card-header py-3 d-flex flex-row align-items-center justify-content-between\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseCardExample\">\r\n                                <h6 className=\"m-0 font-weight-bold text-primary\">{this.props.word}</h6>\r\n                            </a>       \r\n                            {/* <!-- Card Header - Dropdown --> */}\r\n                            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                        <h6 className=\"\">(Furigana goes here)</h6>\r\n                        <div className=\"dropdown no-arrow\"> \r\n                            <a className=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\"></i>\r\n                            </a>\r\n                            <div className=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\" aria-labelledby=\"dropdownMenuLink\">\r\n                            <div className=\"dropdown-header\">Options:</div>\r\n                            <a className=\"dropdown-item\" href=\"#\">Save</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item\" href=\"#\">Delete</a>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                       \r\n                            {/* <!-- Card Content - Collapse --> */}\r\n                            <div className=\"collapse show\" id={\"collapseCardExample\"+this.props.word}>\r\n                                <div className=\"card-body\">\r\n                                        <div style={{left:\"300px\"}} className=\"text-xs font-weight-bold text-uppercase mb-1\">Anthropomorphism:</div>\r\n                                        <hr/>\r\n                                        <ul>\r\n                                            apple (fruit\r\n                                            <li>apple tree (Malus pumila) ［林檎］</li>\r\n                                        \r\n                                        </ul>\r\n                                \r\n                                </div>\r\n                                \r\n                            </div>\r\n                    </div>\r\n\r\n                    \r\n\r\n\r\n                 \r\n                </div>  \r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Card","import React, {Component} from 'react'\r\nimport Topbar from './Topbar'\r\nimport Content from './Content'\r\n\r\nclass ContentWrapper extends Component{\r\n    constructor(props){\r\n        super(props)\r\n     \r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            // <!-- Content Wrapper -->\r\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n        \r\n              {/* <!-- Main Content --> */}\r\n              <div id=\"content\">\r\n\r\n                <Topbar />\r\n                <Content />\r\n                \r\n              \r\n              </div>\r\n              {/* <!-- End of Main Content --> */}\r\n        \r\n   \r\n            </div>\r\n            \r\n        \r\n            \r\n   \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ContentWrapper\r\n\r\n","import React, { Component }from 'react';\nimport './App.css';\nimport MyProvider from './components/MyProvider'\nimport Sidebar from './components/Sidebar';\nimport ContentWrapper from './components/ContentWrapper';\n\nconst ThemeContext = React.createContext('light');\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    // this.state = {\n    //   wordBank: []\n    // }\n  }\n\n//   async componentDidMount() {\n//     const result = await fetch('/api/words');\n//     const data = await result.json();\n\n//     // const prevState = this.state;\n//     // const newState = {recipes: data.results};\n//     // const nextState = Object.assign({}, prevState, newState);\n//     // this.setState(nextState)\n//         const prevState = this.state;\n//     this.setState({\n//         ...prevState,\n//         wordBank: data\n//     })\n\n// }\n\n  render(){\n      return (\n    <MyProvider>\n    <div className=\"App\">\n      <div id=\"wrapper\">\n      <Sidebar />\n      <ContentWrapper  />\n\n    </div>\n    </div>\n    </MyProvider>\n  );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* global fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}